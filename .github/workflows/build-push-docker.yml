name: build-push-docker

on:
  push:
    paths:
      - "docker/**"
      - ".github/workflows/build-push-docker.yml"

env:
  IMAGE_TAG_DEV: bolsel/php:api-platform-dev

jobs:
  push_to_registries:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
      - 
        name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./docker
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta_base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
            ghcr.io/${{ github.repository }}
      - 
        name: Build and push Docker images (DEV)
        uses: docker/build-push-action@v3
        with:
          context: ./docker
          file: Dockerfile-dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_TAG_DEV }}
            ghcr.io/${{ env.IMAGE_TAG_DEV }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
